一、ngx_lua模块
ngx_lua模块通过将lua解释器集成进Nginx，可采用lua脚本实现业务逻辑
模块具备以下特性：
1.高并发、非阻塞的处理各种请求
2.Lua内建协程，将异步回调转换成顺序调用的形式
3.每个协程都有一个独立的全局环境，继承与全局共享的、只读的common data

得益于Lua的支持，ngx_lua在处理10000个并发请求时只需要很少的内存。根据测试，ngx_lua处理每个请求只需要2KB的内存
如果使用LuaJIT则会更少

二、协程（Coroutine）
类似于一种多线程，与多线程的区别：
1.协程并非os线程，所以创建、切换开销比线程相对要小
2.协程与线程一样有自己的栈、局部变量等，但协程的栈是在用户进程空间模拟的，所以开销少
3.多线程程序是多个线程并发执行，协程强调多个协程协作的关系，只有当一个协程主动放弃执行权，另一个协程才能获得执行权
4.多个协程只有一个在运行，临界区的访问不需要加锁，多线程的情况必须加锁
5.多线程程序多个控制流，程序行为不可控，多个协程的执行由开发者定义为可控

Nginx进程模型
采用多进程模型，单Master-多Worker，Master进程主要用来管理Worker进程
Worker进程采用单线程、非阻塞的事件模型（Event Loop）来实现端口的监听及客户端请求的处理
同时Worker还要处理来自Master的信号。Worker进程个数一般设置为机器CPU核数
Master进程主要功能：
1.接收外界信号
2.向各Worker进程发送信号
3.监控worker进程的运行状态
4.当Worker进程退出后，会自动重启新的worker进程

三、HTTP请求处理
阶段
post-read:读取请求内容
server-rewrite：server请求地址重写阶段
find-config：配置查找阶段，完成当前请求与location配冲快之间的配对工作
rewrite：location请求地址重写阶段，当ngx_rewrite指令用于location中
post-rewrite
preacccess
access
post-access
try-files
content
log

四、ngx_lua指令

五、OpenResty
基于Nginx与Lua的高性能Web平台，内部集成Lua库，第三方模块及大多数的依赖性。


