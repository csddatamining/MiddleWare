什么是缓存
	在计算中，缓存是一个高速数据存储层，其中存储了数据子集，且通常是短暂性存储，这样日后再次请求此数据时，速度要比访问主内存位置快。
	通过缓冲，可以高效地重用之前检索或计算的数据
为什么用缓存
    1.提升应用程序性能：内存比磁盘快
    2.降低数据库成本：MySQL，8核16G每秒支持2w条sql语句读取速度；放内存中内存方式访问可能就支持20w/s,200w/s
    3.减少后端负载：Java访问db，连接消耗性能，网络资源、线程资源
    4.可预测的性能
    5.消除数据库热点：经常访问的数据可加载到缓冲中
    6.提高读取吞吐量（IOPS）
    读多写少用缓存，高并发下也用到缓存

场景
    在Java应用中，对于访问频率高，更新少的数据，通常的方案是将这类数据加入缓存中。
    相对从数据库中读取来说，读缓存效率会有很大提升。
    在集群环境下，常用的分布式缓存有Redis、Memcache等。
    但在某些业务上可能不需要去搭建一套复杂的分布式缓存系统，在单机环境下，通常是会希望使用内部的缓存（LocalCache）。
    缓存分为分布式缓存和单机缓存两种。Java中有很多种方法用来存数据：如容器、List、集合

方案：
    基于缓存的规范：基于JSR107规范自研
    基于ConcurrentHashMap实现数据缓存

Guava Cache介绍
Guava Cache是Google guava中的一个内存缓存模块，用于将数据缓存到JVM内存中。
实际项目开发中经常讲一些公共或者常用的数据缓存起来方便快速访问。
有哪些情况？
1.愿意消耗一些内存空间来提升速度
2.预料到某些键会被查询一次以上
3.缓存中存放的数据总量不会超出内存容量
Guava Cache是单个应用运行时的本地缓存。它不会把数据存放到文件或者外部服务器。
如果不符合你的需求，请尝试Memcached、Redis这类工具。

