一、ActiveMQ支持哪些协议
ActiveMQ支持多种协议传输和传输方式，允许客户端使用多种协议连接
ActiveMQ支持的协议：AUTO、OpenWire、AMQP、Stomp、MQTT等

二、数据传输方式
ActiveMQ支持的基础传输方式：VM、TCP、SSL、UDP、Peer、Multicast、HTTP（S）等，
以及更高级的Failover、Fanout、Discovery、ZeroConf方式

ActiveMQ的协议连接配置
在${ACTIVEMQ_HOMT}/conf/activemq.xml中，通过配置<transportConnectors>就可以使用多种传输方式

常用的传输方式及配置
tcp、udp、ssl、nio、vm、http

TCP
由于TCP具有可靠传输的特性，它在ActiveMQ中也是最常用使用的一种协议。在默认的配置中，TCP连接的端口为61616
TCP配置格式
tcp://hostname:port?key=value
TCP配置参数说明
在服务器端配置时，参数要以"transport."开头
在客户端连接时，参数省略"transport."前缀

三、OpenWire协议
Apache的一种跨语言协议，允许从不同的语言和平台访问ActiveMQ，是ActiveMQ4.X以后的版本默认的传输协议。
客户端和服务端都通过前缀"wireFormat."表示

四、MQTT协议
Message Queuing Telemetry Transport 消息队列遥测传输是IBM开发的一个即时通讯协议，已成为物联网通信标准
结构简单，轻量级，适合计算能力有限，低带宽，不可靠的网络环境使用
MQTT服务质量
服务质量（Qos）级别是一种关于发送者和接收者之间信息投递的保证协议。MQTT有三种Qos级别：
0，1，2
至多一次0
至少一次1
只有一次2
为什么要有服务质量
Qos是MQTT的一个主要功能，它使得在不可靠网络下进行通信变得更为简单，因为即便在非常不可靠的网络下，
协议也可以掌控是否需要重发消息并保证消息到达。它也能帮助客户端根据网络环境和程序逻辑来自由选择QoS
QoS level0：例如上传日志，发一次不管失败成功
Qos level1：针对客户端发布消息到服务器的消息流/针对服务器发布到订阅者的消息流，
            例如客户端发数据，需要接收一个回执，说明消息处理过程中有应答机制，没收到会重发
Qos level2：客户端发送数据，服务端需要记录，并保证不存储同样的数据
默认开启MQTT协议
MQTT支持层次结构和通配符，但分隔符合ActiveMQ不同
            ActiveMQ        MQTT
分隔符         .               /
元素          *               +
子节点         >               #
示例：
主题名：foo.blash.bar¡
在MQTT的客户端订阅时，可以为foo/+/bar
在JMS订阅时，可以为foo.*.bar

Spring使用MQTT
Spring Integration提供了MQTT协议的支持，通过Maven添加依赖即可使用
<dependency>
    <groupId>org.springframework.integration</groupId>
    <artifactId>spring-integration-mqtt</artifactId>
    <version>5.1.1.RELEASE</version>
</dependency>
官方教程：https://docs.spring.io/spring-integration/reference/html/mqtt.html

五、AUTO协议
自动检测协议
从ActiveMQ 5.13.0开始，ActiveMQ开始支持协议格式检测，可以自动检测OpenWire、STOMP、AMQP和MQTT。
允许这4种类型的客户端共享一个传输
如何使用AUTO协议
AUTO使用TCP
<transportConnector name="auto" uri="auto://localhost:5671"/>
AUTO使用SSL
<transportConnector name="auto+ssl" uri="auto+ssl://localhost:5671">
AUTO使用NIO
<transportConnector name="auto+nio" uri="auto+nio://localhost:5671">
AUTO使用NIO+SSL
<transportConnector name="auto+nio+ssl" uri="auto+nio+ssl://localhost:5671">
